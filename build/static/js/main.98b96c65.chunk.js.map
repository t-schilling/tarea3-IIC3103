{"version":3,"sources":["componentes/Socket.js","componentes/Chat.js","componentes/minetruck.png","componentes/Info.js","App.js","index.js"],"names":["socket","require","connect","path","Chat","username","useState","mensaje","setMensaje","mensajes","setMensajes","useEffect","on","date","message","name","concat","off","className","map","e","i","Date","onSubmit","preventDefault","emit","htmlFor","id","cols","value","onChange","target","Info","trucks","setTrucks","positions","setPosition","myIcon","L","Icon","iconUrl","minetruck","iconRetinaUrl","popupAnchor","iconSize","truck","camion","undefined","position","status","obj","code","find","element","console","log","source","truck_object","truckInfo","origin","destination","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","dat","Polyline","pathOptions","color","data","Marker","icon","Popup","onClick","a","fixTruck","App","setUsername","registrado","setRegistrado","align","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98b96c65.chunk.js","sourcesContent":["//import io from 'socket.io-client';\n\nconst io = require(\"socket.io-client\");\n\nvar socket = io.connect('wss://tarea-3-websocket.2021-2.tallerdeintegracion.cl', {path: '/trucks'});\n\nexport default socket;","import React, {useState, useEffect} from 'react';\nimport socket from './Socket';\n\nconst Chat = ({username}) => {\n     \n    const [mensaje, setMensaje] = useState('');\n    const[mensajes, setMensajes] = useState([]);\n\n    const[trucks, setTrucks] = useState([]);\n    const[positions, setPosition] = useState([[]])\n\n\n    useEffect(() => {\n        //console.log('recibiendo mensajes')\n        socket.on('CHAT', ({date, message, name}) => {\n            //console.log(name+':'+message + '->('+date+')');\n            setMensajes(mensajes.concat({date, message, name}));\n        });\n        \n        return () => {\n            socket.off('CHAT');\n      };\n    },[mensajes]);\n\n    const submit = (e) => {\n        e.preventDefault();\n        //console.log({message : mensaje, name : username})\n        socket.emit('CHAT', {message : mensaje, name : username})\n        setMensaje(\"\");\n    }\n\n\n    return (\n\n        <div className=\"chat_todo\">\n            <div><h2>Chat</h2></div>\n            <div className=\"chat\"> \n                {mensajes.map((e,i) => <div  key={i}> \n                    <div>[{Date(e.date)}] -- {e.name}: {e.message}</div>\n                </div>)}\n            </div>\n            <form className=\"chat_form\" onSubmit={submit}>\n                <label htmlFor=\"\"> Escriba su mensaje : \n                </label>\n                <textarea name=\"\" id=\"\" cols=\"30\" value={mensaje} onChange={e => setMensaje(e.target.value)}>\n\n                </textarea>\n            <button> Enviar mensaje</button>\n\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default Chat;","export default __webpack_public_path__ + \"static/media/minetruck.9d33f62e.png\";","import React, {useState, useEffect} from 'react';\nimport socket from './Socket';\nimport { MapContainer, TileLayer, Polyline, Tooltip, Marker, Circle, Popup} from 'react-leaflet';\nimport L from 'leaflet'\nimport './Map.css';\nimport './../App.css'\nimport minetruck from './minetruck.png';\n\n\nconst Info = () => {\n\n    const[trucks, setTrucks] = useState([]);\n    const[positions, setPosition] = useState([[]]);\n\n    const myIcon = new L.Icon({\n        iconUrl: minetruck,\n        iconRetinaUrl: minetruck,\n        popupAnchor:[-0,-0],\n        iconSize: [32,45]\n    })\n\n    \n    useEffect(() => {\n        socket.on('TRUCKS', truck =>{\n            for (let camion of truck){\n                if(camion.position == undefined){\n                    camion.position = [0,0];\n                };\n                if(camion.status == undefined){\n                    camion.status = 'Unknown';\n                };\n            }\n            setTrucks(trucks.concat(truck));\n        });\n        return () => {socket.off('TRUCKS')};\n    },[trucks]);\n\n    useEffect(() => {\n        socket.on( 'POSITION', (obj) => {setPosition(positions.concat([{code: obj.code, position : obj.position}]));\n        let truck  = trucks.find(element => element.code === obj.code);\n            if (truck === undefined){\n                console.log('[POSITION] codigo camion buscado: ' + obj.code)\n                console.log( \"[POSITION]  Truck not found\");\n            }\n            else{\n                truck.position = obj.position;\n                //console.log('[POSITION]  Nueva posicion de: ' + obj.code + '<->' + obj.position);\n            } \n        });\n        return () => {socket.off('POSITION')};\n    });\n\n    useEffect(() => {\n        socket.on('FAILURE', ({code, source}) => { \n            let truck  = trucks.find(element => element.code === code);\n            if (typeof(truck) === undefined){\n                return \"Truck not found\";\n            }\n            else{\n                truck.status = source;\n            }\n        });\n        return () => {socket.off('FAILURE')}\n    });\n\n    useEffect(() => {\n        socket.on('FIX', (truck_object) =>{\n            let truck  = trucks.find(element => element.code === truck_object.code);\n            if (typeof(truck) === undefined){{console.log('[MAP] entrando a tooltip')}\n                return \"Truck not found\";\n            }\n            else{\n                truck.status = 'Ok';\n            }\n        });\n        return () => {socket.off('FIX')}\n    });\n\n    const truckInfo = (code) => {\n        let truck  = trucks.find(element => element.code === code);\n        console.log('[truckInfo] entrando a la funcion con: ' + truck.code)\n        if (truck === undefined){\n            return (\"Truck not found\");\n        }\n        //console.log('ahora tenemos' + truck)\n        return (<div>\n            <p>'Truck:' {truck.truck}</p><br />\n            <p>'Code: '{truck.code}</p><br />\n            <p>'Origin: '{truck.origin}'</p><br />\n            <p>Destination: '{truck.destination}</p><br />\n            <p>'Actual Position: '{truck.position}</p><br /> \n            <p>'Status: '{truck.status}</p> <br />\n        </div>)   \n    };\n\n    const fixTruck = (e) =>{\n        console.log('[fixTruck] Yo reparando el siguiente camion: ' + e);\n        socket.emit('FIX', {code : e});\n    }\n\n    const changeStatus = () => {\n        for (let element of trucks){\n            if(element.status == undefined || element.status == ''){\n                element.status = 'Ok';{console.log('[MAP] entrando a tooltip')}\n            }\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"mapArea\">\n                <MapContainer center={[-21.976193,-68.79]} zoom={11} scrollWheelZoom={false}>\n                <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n\n                {trucks.map((dat) => {\n                    return (\n                        <div key={dat.code}>\n                        <Polyline pathOptions={{color:'black'}} positions={[dat.origin, dat.destination]} />\n                        </div>\n                    )\n                })}\n                \n                {trucks.map((data) => {\n                    console.log('[MAP]: primer print posiciones' + data.code + '->'+  data.position)\n                    if(data.position === undefined){\n                        console.log('[MAP] error encontrando posiciones')\n                        return('')\n                    }\n                    else{\n                    console.log('[MAP] posiciones encontradas: '+ data.code + '->'+  data.position)\n                    console.log('[MAP] coordinadas a imprimir: lat: ' + data.position[0] + 'long: ' + data.position[1])\n                        return (\n                            <div >\n                                <Marker position={[data.position[0], data.position[1]]} icon={myIcon}>\n                                        <Popup>\n                                        {truckInfo(data.code)}                                \n                                        </Popup>\n                                </Marker>\n                            </div>\n                        )\n                    }\n                })}\n                \n                \n                \n            \n                    \n                </MapContainer>\n            </div>\n\n\n            \n        <div className=\"infoArea\">\n            <div className=\"info_titulo\">\n                <div><h2>Trucks Information:</h2></div>\n                <div className=\"solo_info\"> \n                    {trucks.map((e,i) => <div  key={i}> \n                    <div> \n                        <div className='truckInfo_container'>\n                        <div>Truck: {e.truck}</div>\n                        <div>Code: {e.code}</div>\n                        <div>Origin: {e.origin} </div>\n                        <div>Destination: {e.destination} </div>\n                        <div>Status: {e.status} </div>\n                        <div>\n                        {(e.status !== (('Ok') || ('Unknown'))) && \n                            <button value={e.code} onClick={a => fixTruck(a.target.value)}>Fix Truck</button>}\n\n\n                    </div>\n                        </div>\n                    </div>\n                    </div>)}\n                </div>\n            </div>\n        </div>\n    </div>    \n\n    )\n}\n\nexport default Info;","import React, {useState} from 'react';\nimport socket from './componentes/Socket';\nimport Chat from './componentes/Chat';\nimport Info from './componentes/Info';\nimport './App.css';\n\nfunction App() {\n\n  const [username, setUsername] = useState(\"\");\n  const [registrado, setRegistrado] = useState(false);\n\n  const registrar = (e) => {\n    socket.emit('TRUCKS');\n    //console.log('Emitiendo TRUCKS')\n    //console.log('el nombre de usuario es :' + username)\n    e.preventDefault();\n    if (username !== ''){\n      setRegistrado(true);\n      //console.log('registrado = ' + registrado)\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"titleArea\"><h1 align=\"center\">Tarea 3</h1>\n      \n      {\n        !registrado && \n\n        <form className=\"logIn\" onSubmit={registrar}>\n          <label> Escoja un nombre de usuario:</label>\n          <input value={username} onChange={e => setUsername(e.target.value)}></input>\n          <button>Ingresar a la pagina</button>\n        </form>\n      }\n      {\n        registrado &&\n\n        <div className=\"chatArea\"> <Chat username={username}/> </div>\n      }\n\n      {\n        registrado &&\n        \n          <Info/>\n      }\n\n\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}